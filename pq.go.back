package main

import (
	"bufio"
	"fmt"
	"log"
	"net/http"
	"strings"

	"github.com/PuerkitoBio/goquery"
)

func main() {
	res, err := http.Get("https://blu-ray-rezensionen.net/hellboy-ii-die-goldene-armee-4k-uhd/")
	if err != nil {
		log.Fatalf("[error] [http.Get()]: %s", err)
	}
	defer res.Body.Close()
	if res.StatusCode != 200 {
		log.Fatalf("[error] [res.StatusCode] code:%d status:%s", res.StatusCode, res.Status)
	}
	// Load the HTML document
	doc, err := goquery.NewDocumentFromReader(res.Body)
	if err != nil {
		log.Fatal("Cannot load the HTML document: %s", err)
	}

	doc.Find("p strong").Each(func(i int, s *goquery.Selection) {
		//fmt.Println(s.Text())
		if strings.Contains(s.Text(), "Bildqualit√§t") {
			htmlstr, err := s.Html()
			if err != nil {
				log.Fatal("Cannot parse the HTML: %s", err)
			}
			// Replace the HTML breaks with newline escape characters, creating a multiline string
			str := strings.Replace(htmlstr, "<br/>", "\n", -1)
			scanner := bufio.NewScanner(strings.NewReader(str))
			for scanner.Scan() {
				// Apply filtering for the values I am interesting in
				if strings.Contains(scanner.Text(), "UHD") {
					parts := strings.Split(scanner.Text(), ":")
					trimmedPart := strings.TrimSpace(parts[1])
					fmt.Println(trimmedPart)
				}
			}
		}
	})

}
